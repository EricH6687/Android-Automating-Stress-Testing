#!/bin/sh
#BTOnOff_V1
#Eric Huang 2013


	echo "Testing is started at `date`..."
	`date > "/data/local/tmp/procrank-BTOn.log"`
	`ps >> "/data/local/tmp/procrank-BTOn.log"`
	`date > "/data/local/tmp/procrank-BTOff.log"`
	`ps >> "/data/local/tmp/procrank-BTOff.log"`
	`date > "/data/local/tmp/meminfo-original.log"`
	`cat /proc/meminfo >> "/data/local/tmp/meminfo-original.log"`
	export busyboxpath="/data/local/tmp/busybox"
	export package="android.settings.BLUETOOTH_SETTINGS"
	export BTstring="dump"
	r=0
	dontstop=0
	BTOn=0
	BTOnPass=0
	BTOnFail=0
	BTOff=0
	BTOffPass=0
	BTOffFail=0

	if [ "$1" == 0 ]
	then
		dontstop=1
	fi

	am start -a $package
	for i in 1 2 3 4 5
		do
			input keyevent 4
		done


	while [ "$r" != `$busyboxpath expr $1 - $dontstop ` ]
		do
			export BTstate=`dumpsys bluetooth|$busyboxpath grep -i $BTstring`
			export checkBT=`[ -z "$BTstate" ] ; echo $?`
			if [ "$checkBT" == 0 ]
				then
					for i in 1 2 3 4 5
						do
							input keyevent 4
						done
					am start -a $package
					input keyevent 122
					input keyevent 22
					input keyevent 23
					r=`$busyboxpath expr $r + 1 `
					BTOn=`$busyboxpath expr $BTOn + 1 `
					echo "Try to turn On BT : round $BTOn"
					sleep 5s

					export BTstate=`dumpsys bluetooth|$busyboxpath grep -i $BTstring`
					export checkBT=`[ -z "$BTstate" ] ; echo $?`
					if [ "$checkBT" == 1 ]
						then
							echo "BT is On"
							BTOnPass=`$busyboxpath expr $BTOnPass + 1 `
							echo "BT On Pass for $BTOnPass cycle(s)"
							if [ `$busyboxpath expr $r % 300 ` -eq 0 ]
							then
								`echo "BT On Pass for $BTOnPass cycle(s)" >> "/data/local/tmp/procrank-BTOn.log"`
								`date >> "/data/local/tmp/procrank-BTOn.log"`
								`ps >> "/data/local/tmp/procrank-BTOn.log"`
								echo "Record the memory info"
							fi
						else
							echo "Turn On BT failure"
							BTOnFail=`$busyboxpath expr $BTOnFail + 1 `
							echo "BT On Fail for $BTOnFail cycle(s)"
							if [ `$busyboxpath expr $r % 300 ` -eq 0 ]
							then
								`echo "BT On Fail for $BTOnFail cycle(s)" >> "/data/local/tmp/procrank-BTOn.log"`
								`date >> "/data/local/tmp/procrank-BTOn.log"`
								`ps >> "/data/local/tmp/procrank-BTOn.log"`
								echo "Record the memory info"
							fi
					fi
				else
					for i in 1 2 3 4 5
						do
							input keyevent 4
						done
					am start -a $package
					input keyevent 122
					input keyevent 22
					input keyevent 23
					r=`$busyboxpath expr $r + 1 `
					BTOff=`$busyboxpath expr $BTOff + 1 `
					echo "Try to turn Off BT : round $BTOff"
					sleep 5s

					export BTstate=`dumpsys bluetooth|$busyboxpath grep -i $BTstring`
					export checkBT=`[ -z "$BTstate" ] ; echo $?`
					if [ "$checkBT" == 0 ]
						then
							echo "BT is Off"
							BTOffPass=`$busyboxpath expr $BTOffPass + 1 `
							echo "BT Off Pass for $BTOffPass cycle(s)"
							if [ `$busyboxpath expr $r % 300 ` -eq 0 ]
							then
								`echo "BT Off Pass for $BTOffPass cycle(s)" >> "/data/local/tmp/procrank-BTOff.log"`
								`date >> "/data/local/tmp/procrank-BTOff.log"`
								`ps >> "/data/local/tmp/procrank-BTOff.log"`
								echo "Record the memory info"
							fi
						else
							echo "Turn Off BT failure"
							BTOffFail=`$busyboxpath expr $BTOffFail + 1 `
							echo "BT Off Fail for $BTOffFail cycle(s)"
							if [ `$busyboxpath expr $r % 300 ` -eq 0 ]
							then
								`echo "BT Off Fail for $BTOffFail cycle(s)" >> "/data/local/tmp/procrank-BTOff.log"`
								`date >> "/data/local/tmp/procrank-BTOff.log"`
								`ps >> "/data/local/tmp/procrank-BTOff.log"`
								echo "Record the memory info"
							fi
					fi
			fi

			echo "Testing is finish at `date`..."
			`date > "/data/local/tmp/meminfo-aftertest.log"`
			`cat /proc/meminfo >> "/data/local/tmp/meminfo-aftertest.log"`

			`echo "Total of BT On Time: $BTOn round" > "/data/local/tmp/TestResult.txt"`
			`echo "BT On Pass for $BTOnPass cycle(s)" >> "/data/local/tmp/TestResult.txt"`
			`echo "BT On Fail for $BTOnFail cycle(s)" >> "/data/local/tmp/TestResult.txt"`
			`echo "Total of BT Off Time: $BTOff round" >> "/data/local/tmp/TestResult.txt"`
			`echo "BT Off Pass for $BTOffPass cycle(s)" >> "/data/local/tmp/TestResult.txt"`
			`echo "BT Off Fail for $BTOffFail cycle(s)" >> "/data/local/tmp/TestResult.txt"`
			echo `uptime` >> "/data/local/tmp/TestResult.txt"

		done



